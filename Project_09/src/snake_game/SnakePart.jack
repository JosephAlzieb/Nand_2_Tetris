class SnakePart {
	field int x; // x position
	field int y; // y position
	field int direction; // 1 is up, 2 is down, 3 is left, 4 is right
	field int length; // size of the snake part

	constructor SnakePart new(int nX, int nY, int nLength, int nDirection) {
		let x = nX;
		let y = nY;
		let length = nLength;
		let direction = nDirection;
		do draw();
		return this;
	}


	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}


	method void draw() {
		do Screen.setColor(true);
		do Screen.drawRectangle(x, y, x + length, y + length);
		return;
	}


	method boolean move() {
		// up
		if (direction = 1) {
			if ((y - length) > 10) {
				do Screen.setColor(false);
				do Screen.drawRectangle(x, y, x + length, y + length);
				let y = y - 10;
				do Screen.setColor(true);
				do Screen.drawRectangle(x, y, x + length, y + length);

				}
			return true;
		}
		// down
		if (direction = 2) {
			if ((y + length) < 250) {
				do Screen.setColor(false);
				do Screen.drawRectangle(x, y, x + length, y + length);
				let y = y + 10;
				do Screen.setColor(true);
				do Screen.drawRectangle(x, y, x + length, y + length);
			}
			return true;
		}
		// left
		if (direction = 3) {
			if ((x - length) > 10) {
				do Screen.setColor(false);
				do Screen.drawRectangle(x, y, x + length, y + length);
				let x = x - 10;
				do Screen.setColor(true);
				do Screen.drawRectangle(x, y, x + length, y + length);
			}
			return true;
				
		}
		// right
		if (direction = 4) {
			if ((x + length) < 501) {
				do Screen.setColor(false);
				do Screen.drawRectangle(x, y, x + length, y + length);
				let x = x + 10;
				do Screen.setColor(true);
				do Screen.drawRectangle(x, y, x + length, y + length);
			}
			return true;
		}
		
		return false;
	}


	method int getDirection() {
		return direction;
	}

	method int getX() {
		return x;
	}
	method int getY() {
		return y;
	}

	method void setDirection(int nDirection) {
		let direction = nDirection;
		return;
	}
}